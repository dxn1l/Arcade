package arcade.vista;

import arcade.fabrica.FabricaJuegosCompleta;
import arcade.fabrica.JuegoAbstractFactory;

import javax.swing.*;
import java.awt.*;

public class MenuPrincipal extends JFrame {

    private final JPanel panelContenedor;

    public MenuPrincipal() {
        setTitle("MÃ¡quina Arcade - Juegos de LÃ³gica");
        setSize(600, 600);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        panelContenedor = new JPanel(new BorderLayout());
        add(panelContenedor, BorderLayout.CENTER);

        mostrarMenuPrincipal();

    }

    private void mostrarMenuPrincipal() {
        panelContenedor.removeAll();

        JPanel menuPanel = new JPanel(new GridLayout(1, 3, 30, 30));
        menuPanel.setBorder(BorderFactory.createEmptyBorder(60, 40, 60, 40));

        JButton btnReinas = crearBotonJuego("N Reinas", "â™›");
        btnReinas.addActionListener(e -> {
            int n = elegirTamaÃ±o("N Reinas", new String[]{"4x4", "6x6", "8x8"});
            if (n > 0) {
                JuegoAbstractFactory factory = FabricaJuegosCompleta.obtenerFactory("NReinas");
                mostrarPanel(factory.crearPanelConAccion(n , () -> mostrarMenuPrincipal()));
            }
        });

        JButton btnCaballo = crearBotonJuego("Recorrido del Caballo", "â™ž");
        btnCaballo.addActionListener(e -> {
            int n = elegirTamaÃ±o("Caballo", new String[]{"5x5", "6x6", "8x8"});
            if (n > 0) {
                JuegoAbstractFactory factory = FabricaJuegosCompleta.obtenerFactory("Caballo");
                mostrarPanel(factory.crearPanelConAccion(n , () -> mostrarMenuPrincipal()));
            }
        });

        JButton btnHanoi = crearBotonJuego("Torres de Hanoi", "ðŸ—¼");
        btnHanoi.addActionListener(e -> {
            int n = elegirTamaÃ±o("Torres de Hanoi", new String[]{"3", "4", "5"});
            if (n > 0) {
                JuegoAbstractFactory factory = FabricaJuegosCompleta.obtenerFactory("Hanoi");
                mostrarPanel(factory.crearPanelConAccion(n , () -> mostrarMenuPrincipal()));
            }
        });

        menuPanel.add(btnReinas);
        menuPanel.add(btnCaballo);
        menuPanel.add(btnHanoi);

        panelContenedor.add(menuPanel, BorderLayout.CENTER);
        panelContenedor.revalidate();
        panelContenedor.repaint();
    }

    private JButton crearBotonJuego(String texto, String iconoUnicode) {
        JButton btn = new JButton("<html><center>" + iconoUnicode + "<br>" + texto + "</center></html>");
        btn.setFont(new Font("SansSerif", Font.BOLD, 26));
        btn.setFocusPainted(false);
        btn.setBackground(new Color(220, 235, 255));
        btn.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 2));
        btn.setCursor(new Cursor(Cursor.HAND_CURSOR));
        return btn;
    }

    private int elegirTamaÃ±o(String juego, String[] opciones) {
        String seleccion = (String) JOptionPane.showInputDialog(
                this,
                "Selecciona el tamaÃ±o:",
                juego,
                JOptionPane.QUESTION_MESSAGE,
                null,
                opciones,
                opciones[0]
        );
        if (seleccion == null) return -1;
        return Integer.parseInt(seleccion.substring(0, 1));
    }


    private void mostrarPanel(JPanel nuevoPanel) {
        panelContenedor.removeAll();
        panelContenedor.add(nuevoPanel, BorderLayout.CENTER);
        panelContenedor.revalidate();
        panelContenedor.repaint();
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new MenuPrincipal().setVisible(true);
        });
    }
}
